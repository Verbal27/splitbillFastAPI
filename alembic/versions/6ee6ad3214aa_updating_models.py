"""Updating models

Revision ID: 6ee6ad3214aa
Revises: ed4ddd7b4f92
Create Date: 2025-09-24 11:00:29.309819

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6ee6ad3214aa"
down_revision: Union[str, Sequence[str], None] = "ed4ddd7b4f92"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "balances",
        "active",
        existing_type=postgresql.ENUM("active", "settled", name="statusorm"),
        type_=sa.Enum(
            "active", "settled", name="splitbillstatusenum", native_enum=False
        ),
        existing_nullable=False,
    )
    op.alter_column("pendingusers", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "pendingusers", "alias", existing_type=sa.VARCHAR(length=50), nullable=False
    )
    op.add_column(
        "splitbills",
        sa.Column(
            "status",
            sa.Enum("active", "settled", name="splitbillstatusenum", native_enum=False),
            nullable=False,
        ),
    )
    op.alter_column(
        "splitbills", "currency", existing_type=sa.VARCHAR(length=10), nullable=False
    )
    op.create_unique_constraint(None, "splitbills", ["id"])
    op.drop_column("splitbills", "is_active")
    op.add_column(
        "users",
        sa.Column(
            "status",
            sa.Enum("active", "pending", name="userstatusenum", native_enum=False),
            nullable=False,
        ),
    )
    op.drop_column("users", "is_active")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "is_active", sa.VARCHAR(length=7), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("users", "status")
    op.add_column(
        "splitbills",
        sa.Column(
            "is_active",
            postgresql.ENUM("active", "settled", name="statusorm"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "splitbills", type_="unique")
    op.alter_column(
        "splitbills", "currency", existing_type=sa.VARCHAR(length=10), nullable=True
    )
    op.drop_column("splitbills", "status")
    op.alter_column(
        "pendingusers", "alias", existing_type=sa.VARCHAR(length=50), nullable=True
    )
    op.alter_column("pendingusers", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "balances",
        "active",
        existing_type=sa.Enum(
            "active", "settled", name="splitbillstatusenum", native_enum=False
        ),
        type_=postgresql.ENUM("active", "settled", name="statusorm"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
