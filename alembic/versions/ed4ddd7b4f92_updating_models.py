"""Updating models

Revision ID: ed4ddd7b4f92
Revises: db9bce7268a3
Create Date: 2025-09-23 22:13:06.817638

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ed4ddd7b4f92"
down_revision: Union[str, Sequence[str], None] = "db9bce7268a3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "pendingusers", sa.Column("alias", sa.String(length=50), nullable=True)
    )
    op.alter_column("pendingusers", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_index(op.f("ix_pendingusers_email"), table_name="pendingusers")
    op.create_unique_constraint(None, "pendingusers", ["email"])
    op.drop_constraint(
        op.f("pendingusers_invited_by_fkey"), "pendingusers", type_="foreignkey"
    )
    op.drop_column("pendingusers", "invited_by")
    op.drop_index(op.f("ix_splitbillmembers_email"), table_name="splitbillmembers")
    op.drop_constraint(
        op.f("splitbillmembers_user_id_fkey"), "splitbillmembers", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("splitbillmembers_splitbill_id_fkey"),
        "splitbillmembers",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("splitbillmembers_pending_user_id_fkey"),
        "splitbillmembers",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "splitbillmembers", "splitbills", ["splitbill_id"], ["id"]
    )
    op.create_foreign_key(None, "splitbillmembers", "users", ["user_id"], ["id"])
    op.create_foreign_key(
        None, "splitbillmembers", "pendingusers", ["pending_user_id"], ["id"]
    )
    op.drop_column("splitbillmembers", "invited_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "splitbillmembers",
        sa.Column(
            "invited_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "splitbillmembers", type_="foreignkey")
    op.drop_constraint(None, "splitbillmembers", type_="foreignkey")
    op.drop_constraint(None, "splitbillmembers", type_="foreignkey")
    op.create_foreign_key(
        op.f("splitbillmembers_pending_user_id_fkey"),
        "splitbillmembers",
        "pendingusers",
        ["pending_user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("splitbillmembers_splitbill_id_fkey"),
        "splitbillmembers",
        "splitbills",
        ["splitbill_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("splitbillmembers_user_id_fkey"),
        "splitbillmembers",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_index(
        op.f("ix_splitbillmembers_email"), "splitbillmembers", ["email"], unique=False
    )
    op.add_column(
        "pendingusers",
        sa.Column("invited_by", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        op.f("pendingusers_invited_by_fkey"),
        "pendingusers",
        "users",
        ["invited_by"],
        ["id"],
    )
    op.drop_constraint(None, "pendingusers", type_="unique")
    op.create_index(
        op.f("ix_pendingusers_email"), "pendingusers", ["email"], unique=True
    )
    op.alter_column("pendingusers", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_column("pendingusers", "alias")
    # ### end Alembic commands ###
