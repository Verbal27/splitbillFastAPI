"""initial tables

Revision ID: e444c69205c9
Revises:
Create Date: 2025-09-23 15:50:08.133466

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e444c69205c9"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column(
            "is_active",
            sa.Enum("active", "pending", name="userstatusorm"),
            nullable=False,
        ),
        sa.Column(
            "date_joined",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "pendingusers",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column(
            "invited_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("invited_by", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["invited_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        op.f("ix_pendingusers_email"), "pendingusers", ["email"], unique=True
    )
    op.create_table(
        "splitbills",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("currency", sa.String(length=10), nullable=False),
        sa.Column(
            "is_active", sa.Enum("active", "settled", name="statusorm"), nullable=False
        ),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["owner_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "splitbillmembers",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("alias", sa.String(), nullable=True),
        sa.Column(
            "invited_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("splitbill_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("pending_user_id", sa.Integer(), nullable=True),
        sa.Column("invited_by", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["invited_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pending_user_id"], ["pendingusers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["splitbill_id"], ["splitbills.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        op.f("ix_splitbillmembers_email"), "splitbillmembers", ["email"], unique=False
    )
    op.create_table(
        "balances",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("from_member_id", sa.Integer(), nullable=False),
        sa.Column("to_member_id", sa.Integer(), nullable=False),
        sa.Column("splitbill_id", sa.Integer(), nullable=False),
        sa.Column(
            "active", sa.Enum("active", "settled", name="statusorm"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["from_member_id"], ["splitbillmembers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["splitbill_id"], ["splitbills.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["to_member_id"], ["splitbillmembers.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "comments",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("text", sa.String(length=500), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("splitbill_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"], ["splitbillmembers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["splitbill_id"], ["splitbills.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "expenses",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=50), nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("paid_by_id", sa.Integer(), nullable=False),
        sa.Column("splitbill_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["paid_by_id"], ["splitbillmembers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["splitbill_id"], ["splitbills.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "moneygiven",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=50), nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("given_by", sa.Integer(), nullable=False),
        sa.Column("given_to", sa.Integer(), nullable=False),
        sa.Column("splitbill_id", sa.Integer(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["given_by"], ["splitbillmembers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["given_to"], ["splitbillmembers.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["splitbill_id"], ["splitbills.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "expenseassignments",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("share_amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("expense_id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["expense_id"], ["expenses.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["member_id"], ["splitbillmembers.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("expenseassignments")
    op.drop_table("moneygiven")
    op.drop_table("expenses")
    op.drop_table("comments")
    op.drop_table("balances")
    op.drop_index(op.f("ix_splitbillmembers_email"), table_name="splitbillmembers")
    op.drop_table("splitbillmembers")
    op.drop_table("splitbills")
    op.drop_index(op.f("ix_pendingusers_email"), table_name="pendingusers")
    op.drop_table("pendingusers")
    op.drop_table("users")
    # ### end Alembic commands ###
